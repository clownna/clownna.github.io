[{"title":"To Do List","slug":"TO-DO-LIST","date":"2019-11-10T14:03:47.000Z","updated":"2019-11-10T14:25:38.316Z","comments":true,"path":"2019/11/10/TO-DO-LIST/","link":"","permalink":"http://yoursite.com/2019/11/10/TO-DO-LIST/","excerpt":"","text":"2019:November: data 6:00–7:00 22:00–23:00 run English code 2019.11.11（Mon.） 2019.11.12（Tues.） 2019.11.13（Wed.） 2019.11.14（Thur.） 2019.11.15（Fri.） 2019.11.16（Sat.） 2019.11.17（Sun.） ps：✔ 即为完成。","categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/tags/随笔/"}]},{"title":"To Do List(run)","slug":"TO-DO-LIST-RUN","date":"2019-11-10T13:46:09.000Z","updated":"2019-11-10T14:25:43.046Z","comments":true,"path":"2019/11/10/TO-DO-LIST-RUN/","link":"","permalink":"http://yoursite.com/2019/11/10/TO-DO-LIST-RUN/","excerpt":"","text":"2019:November: 日期 周一 周二 周三 周四 周五 周六 周日 2019.11.11–17 2019.11.18–24 2019.11.25–12.01 2019.12.02–08 2019.12.09–15 2019.12.16–22 2019.12.23–29 ps：✔ 即为完成。","categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/tags/随笔/"}]},{"title":"CSS学习笔记","slug":"CSS学习笔记","date":"2019-10-28T12:05:16.000Z","updated":"2019-10-28T12:54:38.529Z","comments":true,"path":"2019/10/28/CSS学习笔记/","link":"","permalink":"http://yoursite.com/2019/10/28/CSS学习笔记/","excerpt":"前言：^ _ ^ 整理一下以前乱七八糟的笔记哈哈，以后要查找浏览就方便多啦~ ^ _ ^ 1. 简单介绍","text":"前言：^ _ ^ 整理一下以前乱七八糟的笔记哈哈，以后要查找浏览就方便多啦~ ^ _ ^ 1. 简单介绍 CSS： 用来定义网页外观样式，英文全称是Cascading Style Sheet（层叠样式表或级联样式表）； 也是一种标识性语言，用于存放css样式的文件的扩展名后缀为.css; 允许同时控制多重页面的样式和布局，只要修改样式表文件可达到“换肤”效果； 实现内容和样式分离，简化格式代码，精确网页布局，且外部的样式表会被浏览器保存在缓存里，加快了下载显示的速度，提高工作效率； 最新版本CSS3： 带来了圆角，半透明，阴影，渐变，旋转，多背景图等新的特征； 加入了字体，颜色，布局，背景，定位，边框，多列，动画，选择器，用户界面等多个模块； 带来的媒体查询可以为不同的显示设备定义相匹配的样式； 2. PS: 基于书籍《HTML5+CSS3网页设计案例教程》以及网络资源","categories":[],"tags":[{"name":"笔记","slug":"笔记","permalink":"http://yoursite.com/tags/笔记/"},{"name":"学习","slug":"学习","permalink":"http://yoursite.com/tags/学习/"},{"name":"CSS","slug":"CSS","permalink":"http://yoursite.com/tags/CSS/"}]},{"title":"HTML学习笔记","slug":"HTML学习笔记","date":"2019-10-27T14:16:00.000Z","updated":"2019-11-10T13:39:47.400Z","comments":true,"path":"2019/10/27/HTML学习笔记/","link":"","permalink":"http://yoursite.com/2019/10/27/HTML学习笔记/","excerpt":"前言：^ _ ^ 整理一下以前乱七八糟的笔记哈哈，以后要查找浏览就方便多啦~ ^ _ ^ 1. 简单介绍：","text":"前言：^ _ ^ 整理一下以前乱七八糟的笔记哈哈，以后要查找浏览就方便多啦~ ^ _ ^ 1. 简单介绍： 建议访问，有详细教程：菜鸟教程 | w3school HTML： 用来描述网页文档的一种超文本标记/标签语言，英文全称是Hyper Text Markup Language（超文本标记语言）; 纯文本文件，能用任意的文本编辑器编辑，如：记事本、写字板、 Word 、 Dreamweaver 、 Frontpage 等； 通过标记来标识要显示网页的各个部分，浏览器按顺序阅读网页文件，然后根据标记解释和显示网页内容； 最新版本HTML5： 新增了更多语义化标记：header,footer,section,article,aside,nav等; 新增了很多标识元素：canvas,audio,video等； 取消HTML4过时标记：字体&lt;font&gt;,框架&lt;frame&gt;,&lt;frameset&gt;等； 一些全新的表单输入对象，如URL,Email等； 支持本地数据库； 对移动应用程序和游戏方面的支持； 可以跨平台使用，具有良好的移植性； 跨平台使用：应用（如程序语言）可以在多种系统下开发，运行和维护； 可移植性：程序可以在不同平台上使用，只需改动部分代码（实现本质：使用标准库函数；尽可能使所写的程序适用于所有的编译程序；分模块编程，使改写(重写)程序的工作变得轻易）； HTML5 API： 相关网站 API：应用程序编程接口，是一组定义、程序及协议的集合，通过 API接口实现计算机软件之间的相互通信。API 的一个主要功能是提供通用功能集。API同时也是一种中间件，为各种不同平台提供数据共享。 编译程序也称为编译器，是指把用高级程序设计语言书写的源程序，翻译成等价的机器语言格式目标程序的翻译程序。 XHTML: 可扩展超文本标记语言 是一种增强了的HTML，XHTML 是更严谨更纯净的 HTML 版本 所有元素，包括空元素，比如img、br等，也都必须闭合，实现的方式是在开始标签末尾加入斜扛，比如&lt;img … /&gt; 、&lt;br /&gt; 所有的标签必须小写 所有的参数值，包括数字，必须用双引号括起来 不可以省略参数，比如&lt;option selected&gt;必须用&lt;option selected=”selected”/&gt; 属性禁止简写，比如&lt;hidden=”hidden”&gt;必须用&lt;element hidden=”hidden”&gt; 详细差别：相关网站 HTML是一种基于标准通用标记语言（SGML）的应用，而XHTML则基于可扩展标记语言（XML），XML是SGML的一个子集。国际上在网站设计中推崇的WEB标准就是基于XHTML的应用（即通常所说的CSS+DIV）。 2. HTML文档： 文件名一般使用英文字母、数字或下划线，不要使用特殊字符，不要使用空格； 首页文件一般命名为index.html或者index.htm；基本构造： 12345678910111213141516&lt;!-- &lt;html&gt;:表示包含的内容为HTML文档 --&gt;&lt;!-- !DOCTYPE：表示文档类型 --&gt;&lt;!DOCTYPE html&gt;&lt;!-- 声明当前页面的语言类型,如中文 --&gt;&lt;html lang=\"zh-CN\"&gt;&lt;!-- 头部 --&gt;&lt;head&gt;&lt;!-- meta：描述 HTML 文档的元数据 --&gt;&lt;!--charset:规定 HTML 文档的字符编码，如UTF-8 --&gt;&lt;meta charset=\"UTF-8\" /&gt;&lt;title&gt;标题&lt;/title&gt;&lt;/head&gt;&lt;!-- 主体 --&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt; charset 属性是 HTML5 中的新属性，且替换了：&lt;meta http-equiv=”Content-Type” content=”text/html; charset=UTF-8”&gt; ，简写了代码。charset 属性可以通过任意元素上的 lang 属性来重写。 3. HTML语法：3.1 HTML标记： 用于描述功能的符号称为“标记”或“标签”； 单标记： &lt;标记 /&gt;，斜杆表示正确闭合； 双标记： &lt;标记&gt;内容&lt;/标记&gt;，成对出现，分为始标记和尾标记，中间添加内容； 标记可以成对嵌套，不可以交叉嵌套； 3.2. HTML属性： 属性是对标记的必要说明，一般要为属性赋值； 属性均放在相应标记的尖括号内，属性之间用空格隔开； 属性之间没有前后顺序； 属性值用一对双引号括起来； 全局属性：可用于任何HTML5元素； 属性 属性值 描述 accesskey 字符 规定访问元素的键盘快捷键 class 类名 规定元素的类名 contenteditable true，false 规定是否允许用户编辑内容 contextmenu &lt;menu&gt;元素的id 当用户右击元素时将显示上下文菜单 data-* 自定义值 用于存储页面的自定义数据 dir ltr或rtl 规定元素中内容的文本方向 draggable true，false，auto 规定是否允许用户拖动元素 dropzone copy，move，link 规定被拖动数据拖动到元素中会发生什么 hidden hidden 规定对元素进行隐藏 id id名称 规定元素的唯一id（通常用于指向样式表的id） lang 语言代码 设置元素中内容的语言代码 spellcheck true，false 检测元素是否拼写错误 style 一个或多个由分号分隔的 CSS 属性和值 规定元素的行内样式（inline style） tabindex 数字 设置Tab键获取页面中元素焦点的次序 title 文本信息 规定元素的额外信息 translate yes，no 指定一个元素的值在页面载入时是否需要翻译 加粗为HTML5 新增属性 accesskey:不同操作系统不同浏览器使用快捷键前缀不同： class : 通常用于指向样式表的类。但是，它也可以用于 JavaScript 中（通过 HTML DOM）, 来修改 HTML 元素的类名。HTML 元素允许使用多个类，用空格分隔类名。 当元素中没有设置 contenteditable 属性时，元素将从父元素继承。 目前只有 Firefox 浏览器支持 contextmenu 属性。 dir：ltr为默认从左到右，rtl为从右到左。 draggable：auto为使用浏览器默认特性，链接和图像默认是可拖动的。 目前没有主流浏览器支持 dropzone 属性。 lang: 语言代码参考手册 spellcheck可对以下文本进行拼写检查：类型为 text 的 input 元素中的值（非密码）,textarea 元素中的值,可编辑元素中的值。 tabIndex的值可为-1至32767之间的任意数字，-1排除在Tab键的序列之外，0 排列在所有指定tabIndex的控件之后（默认值为0，即不定义tabIndex属性，则根据在源代码的位置进行排序），大于0的tabIndex值设定其Tab键顺序。 目前没有主流浏览器支持 translate 属性。 全局事件属性：插入 HTML元素中，以定义事件行为（比如当用户点击某个元素时启动一段JavaScript） 3.3 &lt;head&gt; 用于说明网页文档头部的相关信息，一般包含标题，元数据，脚本代码，样式代码等。 &lt;title&gt;: 标题，显示在浏览器的标题栏以及Windows任务栏。 &lt;meta&gt;：定义元数据，不显示在网页中。HTML文档可以有多个&lt;meta&gt;标记。 常用元数据： 字符集charset：定义网页使用的字符编码 搜索引擎关键字：将name属性设置为keywords，示例：&lt;meta name=”keywords” content=”关键字，关键字，…” /&gt; 网页定时刷新或跳转：将http-equiv属性设置为refresh 刷新：&lt;meta http-equiv=”refresh” content=”秒数” /&gt; 跳转：&lt;meta http-equiv=”refresh” content=”秒数” url=”资源路径” /&gt; 扩展：相关网站 4. 文字与段落： 空格：&amp;nbsp; 一个&amp;nbsp;占用一个英文字符的位置。 UTF-8编码：一个英文字符等于一个字节，一个汉字等于三个字节。 尽量不要使用&amp;nbsp;来表示多个空格，浏览器对空格的实现不一样。 常用特殊符号： 符号 代码 说明 &copy; &amp;copy; 版权符号 &reg; &amp;reg; 注册商标 &trade; &amp;trade; 商标（美国） &lt; &amp;lt; 左尖括号 &gt; &amp;gt; 右尖括号 &amp; &amp;amp; &amp;符号 添加注释：&lt;!-- 注释内容 --&gt; 换行：&lt;br /&gt;，多个&lt;br /&gt;表示多次换行 预先格式化：&lt;pre&gt;示例： 段落：&lt;p&gt;：自动在其前后创建一些空白，形成段落 水平线：&lt;hr /&gt;：分隔内容 标题文字：&lt;h1&gt;–&lt;h6&gt;：&lt;h1&gt;定义最大标题，&lt;h6&gt;最小 强调文本： 粗体：&lt;b&gt; 斜体：&lt;i&gt; 插入：&lt;ins&gt;，表现为添加下划线 删除：&lt;del&gt; ，表现为添加删除线 小型文本：&lt;small&gt;，一般用于免责声明，注意事项，法律限制，版权声明，新闻来源，许可要求等 语义化、结构化的文本： 上标文本：&lt;sup&gt; 下标文本：&lt;sub&gt; 注音：中文或字符的&lt;ruby&gt;注释（&lt;rt&gt;定义其解释或发音）示例： 标注：&lt;cite&gt;，定义作品如书籍，歌曲，电影，电视，绘画，雕塑等的标题，呈现效果为斜体 定义日期时间：&lt;time&gt;基本语法：&lt;time datetime=&quot;&quot; pubdate=&quot;pubdate&quot;&gt;元素内容&lt;/time&gt;datetime属性：定义元素的日期时间，如果没有定义该属性，则必须在元素内容给出日期时间pubdate属性：是一个逻辑值，指示 &lt;time&gt; 元素中的日期/时间是文档（或 &lt;article&gt; 元素）的发布日期 列表： 无序列表：&lt;ul&gt;标记，其列表项使用&lt;li&gt;标记 有序列表：&lt;ol&gt;标记，其列表项使用&lt;li&gt;标记 定义列表：用于定义术语，没有数字和符号的缩排列表，&lt;dl&gt;标记，&lt;dt&gt;标记定义列表项，&lt;dd&gt;标记定义描述列表中的项目 嵌套列表：可以是列表自身的嵌套，也可以是无序和有序列表互相的嵌套示例： 注音效果图为支持ruby元素显示效果，不支持的话会显示为：注音（Zhu Yin） 目前所有主流浏览器都不支持 &lt;time&gt; 标签 HTML5新增标记加粗 5. 网页多媒体元素：HTML5新增了元素&lt;video&gt;，&lt;audio&gt;，&lt;embed&gt;，&lt;figure&gt;和&lt;figcation&gt;，改变了以外在网页中插入多媒体元素需要第三方控件的局面。 5.1 图像&lt;img&gt;: &lt;img&gt;：为被引用的图像创建占位符； 支持格式：JPEG（JPG）,GIF（支持动画和背景色透明）,PNG（支持背景透明）等 GIF，PNG占位储存空间较小，但GIF图片色彩质量受限，PNG在网页设计中最广泛使用 src：图像资源属性 基本语法：&lt;img src=&quot;url&quot;&gt; url：指明网页中要引用图像的位置，也就是引用图像文件的相对路径或绝对路径； 绝对路径：指向另一个网站的网址相对路径 ：指向网站内的一个文件（相对于网页文件的路径） 同一目录：输入图像全名 上一目录：../表示向上一级目录 下一目录：/表示向下一级目录 alt：图像替代文本（当图像失效显示或鼠标滑过显示） width和height：图像的宽高（像素|百分百） 设置这些属性，是为了在页面加载时会为其预留出空间（布局）。 但不能用于缩放，正确做法是在网页使用图像之前，先处理好图像。 5.2 视频&lt;video&gt;: 支持格式：MP4（最常用，适用性较强）,OGG,WEBM src：同上&lt;img&gt; controls：视频播放控件属性，是否为视频添加浏览器自带的播放控制条（播放按钮，播放进度，播放音量等控件） autoplay：视频在加载就绪后自动播放（使用此属性则忽略preload属性） preload：视频准备播放控件，在页面加载时就加载视频，并且准备播放，三个属性值： auto：当页面加载后加入整个视频 metadata：当页面加载后只加载媒体的元数据 none：当页面加载后不载入视频效果区别： loop：循环播放 muted：视频的音频输出为静音 poster：视频珈载时显示的图像，或者在用户点击播放按钮前显示的图像 width：视频宽度； height：视频高度；属性值：像素 基本语法：&lt;video src=&quot;url&quot; controls=&quot;controls&quot; autoplay=&quot;autoplay&quot; loop=&quot;loop&quot; muted=&quot;muted&quot; poster=&quot;url&quot;&gt;...&lt;/video&gt; 5.3 音频&lt;audio&gt;: 支持格式：MP3（最常用，适用性较强）,OGG,WAV,AAC 属性与&lt;video&gt;基本相同，少了width,height,poster 5.4 &lt;source&gt; source的作用就是为媒介元素（如&lt;video&gt;,&lt;audio&gt;）定义媒介资源 媒介元素可以指定多个source元素，按顺序检测是否可以播放 用于兼容不同的浏览器 属性： src： 规定媒体文件的 URL type：规定媒体资源的 MIME 类型 media：规定媒体资源的类型，供浏览器决定是否下载 基本语法示例： 12345&lt;video&gt; &lt;source src=\"url\" type=\"video/mp4\" /&gt; &lt;source src=\"url\" type=\"video/ogg\" /&gt; 您的浏览器不支持 video 元素。&lt;/video&gt; 几乎所有的主流浏览器都不支持 source–&gt;media 属性。 MIME 类型：描述并标记多媒体内容。 Web 服务器会为所有 HTTP 对象数据附加一个 MIME 类型。当 Web 浏览器从服务器中取回一个对象时，会去查看相关的 MIME 类型，看看它是否知道 应该如何处理这个对象。来源 MIME 类型是一种文本标记，表示一种主要的对象类型和一个特定的子类型，中间由一条斜杠来分隔。具体参考：MIME 参考手册 5.5 多媒体文件&lt;embed&gt; &lt;embed&gt;元素可以插入多种格式的多媒体文件（效果：新建下载任务） 属性：src（url），width,height（宽高），type（ MIME 类型） 一般用于插入flash（.swf）动画：&lt;embed src=&quot;xxx.swf&quot; width=&quot; &quot; height=&quot; &quot;/&gt; 5.6 对象&lt;object&gt; 支持多种不同的媒介类型 data属性：规定对象使用的资源的 URL type属性：规定其MIME 类型 form属性：属性值form_id，规定对象所属的一个或多个表单 name属性：为对象规定名称 width，height属性：规定对象的宽高 可在页面中嵌入一个网页：&lt;object type=&quot;text/html&quot; data=&quot;url&quot; width=&quot; &quot; height=&quot; &quot;&gt;&lt;/object&gt; 5.7 媒介分组和标题&lt;figure&gt;/&lt;figcation&gt; &lt;figure&gt; 规定独立的流内容 可以是图片，图表，代码等等 &lt;figcation&gt; 定义&lt;figure&gt;的标题 放在&lt;figure&gt;的第一个或最后一个子元素的位置，且只能有一个&lt;figcation&gt; 可以是文字说明，图片备注 使用&lt;figure&gt;/&lt;figcation&gt;的好处是方便应用CSS，如同一个盒子元素示例代码： 1234&lt;figure&gt;&lt;figcaption&gt;标题(只能有一个)&lt;/figcaption&gt;...(其他元素，可无限放置)&lt;/figure&gt; 各种浏览器支持的音视频格式不一样，注意考虑：浏览器支持性问题 可以在标签之间放置文本内容，不支持此元素的浏览器就可以显示出该标签的信息 6. 超链接 后记：^ _ ^ 其实去菜鸟，w3school等网站都可以找到详细教程，为什么还是自己整理了笔记呢？一方面是因为笔记这种东西其实会有很强的“个人风格”，带有自己的叙述方式以及个人理解，感觉以后翻阅起来更加舒服（有种个人素材库的感觉哈哈）；另一方面是因为整理笔记的过程也算是一次复习吧，而且像这样敲打一遍感觉记忆会更加深刻；再者就是记录自己学习的过程啊哈哈~ ^ _ ^ PS: 基于书籍《HTML5+CSS3网页设计案例教程》以及网络资源","categories":[],"tags":[{"name":"HTML","slug":"HTML","permalink":"http://yoursite.com/tags/HTML/"},{"name":"笔记","slug":"笔记","permalink":"http://yoursite.com/tags/笔记/"},{"name":"学习","slug":"学习","permalink":"http://yoursite.com/tags/学习/"}]},{"title":"网页设计基础知识","slug":"网页设计基础知识","date":"2019-10-20T11:21:49.000Z","updated":"2019-10-29T03:57:01.459Z","comments":true,"path":"2019/10/20/网页设计基础知识/","link":"","permalink":"http://yoursite.com/2019/10/20/网页设计基础知识/","excerpt":"前言：^ _ ^ 整理一下以前乱七八糟的笔记哈哈，以后要查找浏览就方便多啦~ ^ _ ^ 1. 网页相关知识：","text":"前言：^ _ ^ 整理一下以前乱七八糟的笔记哈哈，以后要查找浏览就方便多啦~ ^ _ ^ 1. 网页相关知识： 1.1 互联网、因特网、局域网、万维网 计算机网络（network）：连接分散计算机设备，以实现资源共享和信息传递的计算机系统。 互联网： 又称国际网络，凡是能彼此通信的设备组成的网络（可以仅是两台可以彼此通信的机器组成的网络） 写法：internet （i小写） 网络与网络之间所串连成的庞大网络，这些网络以一组通用的协议相连 因特网：互联网的一种，是由上千万台设备组成的互联网 写法：Internet（I 大写） 由计算机、网线（联系通道）、网络互联设备（交换机、路由器等，充当信息中转站）组成 它是一个信息资源和资源共享的集合 局域网（LAN）：局部地区形成的一个区域网络，覆盖范围一般是方圆几千米之内 局域网之间的通信协议必须是相同的 无线局域网（WLAN）:俗称WIFI的IEEE 802.11是当前最常见的一种无线局域网通信协议标准 有线局域网：俗称以太网的IEEE 802.3是当前最常见的一种有线局域网通信协议标准 区别广域网（WAN）：是指远距离的、大范围（跨地区、跨城市、跨国家）的计算机网络 Internet是全球最大的广域网，它覆盖的范围遍布全世界 万维网（WWW，全球网）：是Internet上集文本、声音、图像、视频等多媒体信息于一身的全球信息资源网络（万维网是通过互联网获取信息的一种应用） 基于TCP/IP（是指能够在多个不同网络间实现信息传输的协议簇）实现 TCP/IP由很多协议组成，不同类型的协议放在不同的层 最底层：网络层协议：IP协议，用于报文交换网络的一种面向数据的协议 上一层：运输层协议：UDP协议和TCP协议，它们用于控制数据流的传输 最顶层：应用层协议，这些协议定义了一些用于通用应用的数据报结构，包括： DNS：域名服务 FTP：服务使用的是文件传输协议 HTTP：所有的Web页面服务都是使用的超级文本传输协议 POP3：邮局协议 SMTP：简单邮件传输协议 Telnet：远程登陆等 WWW的网页文件是超文本标记语言HTML编写，并在超文件传输协议HTTP支持下运行 WWW的浏览器是一个客户端的程序，其主要功能是使用户获取Internet上的各种资源 之所以在浏览器输入网址时，能看见某网站提供的网页，就是因为浏览器和某网站的服务器之间使用的是HTTP在交流。 关系图： 1.2 网站、网页、浏览器、URL 网站（Website）：展示特定内容的相关网页的集合 网页： 静态网页：纯粹用html语言编写的网页，不能在服务器端运行，没有数据库支持，交互性相对较差；每个网页都有一个固定的url，且以.htm、.html、.shtml、.xml等常见形式为后缀；独立存在，内容相对稳定，容易被搜索引擎检索。 动态网页：以数据库为基础，能在服务器端运行；可以实现的功能较多，如用户注册、登陆、在线调查、用户管理、订单管理、站内搜索、歌曲下载、软件下载、即时更新新闻、可以留言或书写评论等；不独立存在，只有当用户请求服务器时才返回一个完整的网页。 动态网页一般会包含静态网页的内容，静态网页不能包含动态网页的内容。 浏览器：万维网服务的客户端浏览程序，可向万维网服务器发送各种请求，并对从服务器发来的超文本信息和各种多媒体数据格式进行解释、显示和播放 URL（即统一资源定位器）：网址，用于标识网页文件在网络上的位置（URL地址也可以是本地磁盘，或是局域网上的某一台计算机） 一个完整网址由通信协议名称、域名（包括后缀.com、.net、.org等）或IP地址、网页在服务器中的路径和文件名四部分组成： 网页浏览器：主要通过超文本传输协议HTTP进行交互 HTTP与HTTPS的区别： HTTP协议以明文方式发送内容，不提供任何方式的数据加密，不安全 为了数据传输的安全，HTTPS在HTTP的基础上加入了SSL协议，相对安全 SSL依靠证书来验证服务器的身份，并为浏览器和服务器之间的通信加密 IP地址：用来标识每台主机在互联网上的地址（由四个0~255的数字组成，数字之间用点分隔） 域名：用字符来标识主机地址的另一种方法 IP地址与域名的区别： 每一台计算机都有一个唯一的IP地址，一个域名可以有多个IP地址 使用域名或者IP同样可以访问网址，IP地址很难记，域名的作用之一就是方便记忆和提高辨识度 输入域名–&gt;域名解析服务器（dns）解析成其中一个IP地址–&gt;访问这个IP地址 一台计算机上面可以有好多个服务，也就是一个IP地址可以对应多个域名 举例：因为百度不止只有一台服务器，所以它有多个IP地址，这样访问起来会很乱，于是让所有的IP都映射到一个www.baidu.com (域名)，当我们访问域名的时候，就会由百度的负载均衡服务器来分配给一台服务器（即一个IP地址）来让用户访问。 示例： 2. 网页基本元素2.1 网页组成元素 网页的组成元素（最基本）：文本、图像、动画、超链接、视频、音频、表格和表单等 网页中使用的动画主要是GIF动画与Flash动画（一般浏览器中都嵌入插件Adobe Flash Player用来支持Flash动画的播放） 一个超链接由链接载体（文本，图片，图片的热区或热点）和链接目标（任意网络资源：其他网页，相同网页的不同位置，图片，电子邮件地址，文件，应用程序等）组成 用于网络的声音文件格式：MIDI、WAV（很多浏览器不用插件也可以）、MP3、RM（专门的浏览器）和AIF等 用于网络的视频文件格式：RM、WMV、ASF、MPEG、AVI、RMVB和DivX等 表单是网页中实现交互的元素，由不同功能的表单域（也叫表单控件，表单项等）组成，最简单的表单也要包含一个输入区域和一个提交按钮 2.2 网页构成元素 网页的构成要素：标题、页眉（站标Logo、站点名字图片、广告条、导航条和按钮等）、主内容区（重要内容排在左部和上部）、页脚（标注站点所属公司名称、地址、ICP备案、网站版权和制作者信息等）等 站标Logo规格有：（1）88×31:最普遍；（2）120×60：一般大小；（3）20×90：大型；（4）200×70：也已出现； 广告条Banner（宣传网站或替其他企业做广告）的常用尺寸：（1）长方形:常用类型，468×60（像素，下同）；（2）通栏广告：1000×177；（3）垂直矩形：侧面广告，110×300；（4）矩形：内部广告，300×140；（5）中等矩形：弹出窗口，400×430；（6）小矩形：浮动广告，80×80； 导航条：网站内多个栏目的超链接组合（整个网站的方向标，即目录） 按钮：功能性 3. 网站建设流程3.1 网站规划 主题风格、目标用户 结构设计 链接结构图:链接结构是指页面之间互相链接的拓扑结构 首页和一级页面之间用星状链接结构（一对多） 一级和以下各级页面之间用树状链接结构（一对一） 版面设计（布局） 显示器分辨率（网页兼容性） 常见版式布局： 左右形结构： 上下（吕）形结构： 厂（T）形结构： 同字形结构： 匡字形结构： 3.2 创建站点 站点：一组具有相关主题和类似设计的链接文档和资源。由以下三部分组成： 本地文件夹：即本地站点。工作目录。 远端文件夹：即远端站点。用户存储用于进行测试、协作、生产和部署等的文件的位置，一般位于运行web服务器的计算机上。 测试服务器文件夹：处理动态网页。 本地网站的浏览方式： “localhost”和”127.0.0.1”表示本地的意思，”80”是端口，由于默认就是80可以不写。 端口（Port）：设备与外界通讯交流的出口。网络端口：特指TCP/IP协议中的端口，是逻辑意义上的端口。（还有其他端口，略）常用端口之一：TCP 80=超文本服务器（Http)作用：一台主机可以提供许多服务,主机是通过“IP地址+端口号”来区分不同的服务的。 组织站点结构：素材归类整理 目录结构（建议使用）： html：存放html文档页面； css：存放css样式表文件； images：存放网站的图像文件； javascript：存放js脚本； library：存放库项目； media：存放多媒体文件； software：存放可下载的软件； sound：存放声音文件; templates：存放模板文件; 用英文或数字（不能放开头）命名，不能中文，空格，标点符号或特殊字符，尽量小写命名（Internet服务器采用UNIX操作系统时区分大小写）。 3.3 申请空间和域名 虚拟空间：互联网上的一台功能相当于服务器级的电脑或虚拟主机（24小时与因特网相连） 域名：唯一（识别作用） 总结：创建本地站点（本地网站）–&gt;申请空间和域名–&gt;调试（测试）–&gt;上传到web服务器（发布网站）–&gt;用户浏览–&gt;网站的推广和维护 后记：^ _ ^ 虽然只是一些概念性的知识，但感觉理解起来还是有点困难 QAQ …哈哈其实也不能说是困难吧，就是感觉只能算是对此有了一个浅显的了解，然后如果深入学习这些概念还是挺复杂的。^ _ ^ PS: 基于书籍《HTML5+CSS3网页设计案例教程》以及网络资源","categories":[],"tags":[{"name":"笔记","slug":"笔记","permalink":"http://yoursite.com/tags/笔记/"},{"name":"学习","slug":"学习","permalink":"http://yoursite.com/tags/学习/"},{"name":"网页设计","slug":"网页设计","permalink":"http://yoursite.com/tags/网页设计/"}]},{"title":"Markdown学习笔记","slug":"Markdown学习笔记","date":"2019-10-16T08:18:29.000Z","updated":"2019-10-29T02:25:55.077Z","comments":true,"path":"2019/10/16/Markdown学习笔记/","link":"","permalink":"http://yoursite.com/2019/10/16/Markdown学习笔记/","excerpt":"前言^ _ ^ 我开始写博客啦哈哈哈~ 然后是用hexo写的，它使用Markdown作为渲染引擎解析文章，所以就找时间学习了Markdown，这是学习笔记嘿嘿 ^ _ ^ 1. 简单介绍","text":"前言^ _ ^ 我开始写博客啦哈哈哈~ 然后是用hexo写的，它使用Markdown作为渲染引擎解析文章，所以就找时间学习了Markdown，这是学习笔记嘿嘿 ^ _ ^ 1. 简单介绍 Markdown 是一种轻量级标记语言。 Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。 Markdown 文档后缀名： .md或者 .markdown。 编辑器：可选择Typora （包含多种主题，编辑后直接渲染出效果。支持导出HTML、PDF、Word、图片等多种类型文件。） 2. Markdown语法2.1. Markdown标题使用 # 号标记:使用 # 号可表示 1-6 级标题，一级标题对应一个 # 号,以此类推（注意：# 后面加上空格！）。 2.2. Markdown 段落Markdown 段落直接编写文字就好。段落的换行是使用两个以上空格加上回车，也可以在段落后面使用一个空行来表示重新开始一个段落。 2.3. Markdown 字体斜体文本： 在文字的两端加上 * 或 在文字的两端加上 _粗体文本: 在文字的两端加上 ** 或 文字的两端加上 __粗斜体文本: 在文字的两端加上 *** 或 在文字的两端加上 ___ （注意： * 或 _ 个数：斜体 &lt; 粗体 &lt; 粗斜体） 2.4. Markdown 分隔线你可以在一行中用三个以上的星号()、减号(-)、底线(_)来建立一个分隔线，*行内不能有其他东西**。你也可以在星号或是减号中间插入空格。如： * * * 2.5. Markdown 删除线删除线： 在文字的两端加上 ~~ 2.6. Markdown 下划线下划线： 通过 HTML 的 &lt;u&gt; 标签来实现，写法与HTML一样。 2.7. Markdown 脚注 2.8. Markdown 列表 Markdown 支持有序列表和无序列表 无序列表使用星号 * 或加号 + 或减号 - 作为列表标记 有序列表使用数字并加上 . 号来表示 列表嵌套： 只需在子列表中的选项添加四个空格（即制表符tab键） 任务列表：在[ ]中输入x表示完成，也可以通过点击选择完成或者未完成 注意：以基本符号 * - + &gt; 开头的标记，基本符号后有一个用于分割标记符和内容的空格！！ 2.9. Markdown 区块 在段落开头使用 &gt; 符号 ，然后后面紧跟一个空格符号; 区块是可以嵌套的，一个 &gt; 符号是最外层，两个 &gt; 符号是第一层嵌套，以此类推退; 区块中可以使用列表 列表中可以使用区块（四个空格的缩进） 2.10. Markdown 代码 如果是段落上的一个函数或片段的代码可以用反引号把它包起来（`） 示例： prinf(); 代码区块使用 4 个空格（制表符Tab 键） 示例： &lt;?php function test(){ echo &quot;Hello world!&quot; } test(); &gt; 指定一种语言（在段首指定） 123456&lt;?phpfunction test()&#123; echo \"Hello world!\"&#125;test();&gt; 2.11. Markdown 链接 方法一： 一个方括号，里面放上链接显示文字 接着一个普通括号，里面放上链接地址示例：Clownna的官方网站 方法二：一个尖括号，里面放上链接网址，这样的话链接显示文字即链接地址 https://clownna.github.io/ 方法三：用变量来代替 一个方括号，里面放上链接显示文字 接着一个方括号，里面放变量名称 然后在文档的结尾为变量赋值： 一个方括号，里面放变量名称 冒号，加上链接地址 文档尾补充： 示例：Clownna的官方网站 2.12. Markdown 图片 开头一个感叹号 ! 接着一个方括号，里面放上alt属性文本 接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 title 属性的 文字。 也可以像链接那样对图片网址使用变量 （Markdown 还没有办法指定图片的高度与宽度，如果需要的话，可以使用普通的&lt; img&gt; 标签。写法与HTML一样。） 2.13. Markdown 表格 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行 设置表格的对齐方式： -: 设置内容和标题栏居右对齐 :- 设置内容和标题栏居左对齐 :-: 设置内容和标题栏居中对齐 示例： 2.14. Markdown 注释 支持HTML注释 hack方法：利用markdown的解析原理来实现注释 (引号也可以用括号代替) 空格！！！ 2.15. Markdown 表情使用规则：在表情对应的英文单词两边加上冒号 PS: 可以到相关网址查询其他更多表情 3.Markdown 高级技巧3.1. 支持的 HTML 元素 不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写 目前支持的 HTML 元素有：等 3.2. 转义字符在特殊字符前加上反斜杠( \\ )，进行转义。 如上图，示例1是不会显示的，只有加上反斜杠( \\ )进行转义，才可以显示这些特殊字符。 扩展 使用vscode编写markdown的插件：Markdown Preview Enhanced:可以更加形象的展示所编写文档的pdf格式；Markdown TOC:自动插入目录，排序；Maridown PDF:将.md文件转换成其他格式(在编写.md文件的工作区直接右键即可看到由Maridown pdf插件产生的功能项，选择需要转换的格式即可生成需要的文件，生成的文件将会直接保存在.md的文件目录下。) 后记^ _ ^ 整体上来讲Markdown并不难，没什么理解性的东西，就是记住然后运用，再注意一下一些细节，基本上就可以掌握啦~ ^ _ ^ 参考网址","categories":[],"tags":[{"name":"笔记","slug":"笔记","permalink":"http://yoursite.com/tags/笔记/"},{"name":"学习","slug":"学习","permalink":"http://yoursite.com/tags/学习/"},{"name":"Markdown","slug":"Markdown","permalink":"http://yoursite.com/tags/Markdown/"}]}]